একটি চার চাকতি বিশিষ্ট টাওয়ার অব হানয় গেমের অ্যানিমেশন '''টাওয়ার অব হানয়''' হল এক ধরনের বুদ্ধির খেলা খেলায় তিনটি দন্ড খাড়াভাবে পাশাপাশি রাখা থাকে এবং ছোট বড় কিছু ডিস্ক বা চাকতি দন্ড এর ভিতর প্রবেশ করান থাকে খেলায় প্রথম দন্ড থেকে তৃতীয় দন্ডে সবগুলো চাকতি আনতে হয় তবে কিছু নিয়ম পালন করতে হয় নিয়মগুলো হলো: ১. একসাথে একাধিক চাকতি সরানো যাবে না। ২. কখনই ছোট চাকতির উপর বড় চাকতি রাখা যাবে না। ৩. সবসময় উপরের চাকতি ওঠানো যাবে। == সমাধান == টাওয়ার অব হানয় সমাধান করা আগে খুব কঠিন ছিল এখন এটি সমাধান করার জন্য নানা ধরনের এলগরিদম বের হয়েছে নিচে এর এলগরিদম গুলো নিয়ে আলোচনা করা হলোঃ মনে কর ,১ নং দন্ড টি হলো নং এবং নং জোড় সংখ্যার ক্ষেত্রেঃ ১. এর মধ্যে একটি সঠিক মুভ কর ২. এর মধ্যে একটি সঠিক মুভ কর ৩. এর মধ্যে একটি সঠিক মুভ কর ৪. সম্পূর্ন না হওয়া পর্যন্ত চালিয়ে যাও বিজোড় সংখ্যার ক্ষেত্রেঃ ১. এর মধ্যে একটি সঠিক মুভ কর ২. এর মধ্যে একটি সঠিক মুভ কর ৩. এর মধ্যে একটি সঠিক মুভ কর ৪. সম্পূর্ন না হওয়া পর্যন্ত চালিয়ে যাও == সুডোকোডে আলগরিদম == 5,4,3,2,1 def move(n, source, target, auxiliary): if 0: move n-1 disks from source to auxiliary, so they are out of the way move(n-1, source, auxiliary, target) move the nth disk from source to target Display our progress print(A, B, C, sep='\n') move the n-1 disks that we left on auxiliary onto target move(n-1, auxiliary, target, source) initiate call from source to target with auxiliary move(5, A, C, B) == সি++ কোড == #include using namespace std; void tower_hannoi (int disk, char tower1, char tower2, char tower3) if (disk == 1) cout disk; tower_hannoi (disk, tower1, tower2, tower3); return 0; == পাইথন কোড == def hanoi(n, a='A', b='B', c='C'): if == 1: print('move', a, '-->', c) return hanoi(n-1, a, c, b) print('move', a, '-->', c) hanoi(n-1, b, a, c) print(hanoi(5)) == গ্যালারি == File:Iterative algorithm solving disks Tower of Hanoi.gif| File:Tower of Hanoi.jpeg| File:MTOH.jpg| == তথ্যসূত্র == English Wikipedia. == বহিঃসংযোগ ==