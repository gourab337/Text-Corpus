ভাষাবিজ্ঞান এবং কম্পিউটার বিজ্ঞানে '''প্রসঙ্গমুক্ত ব্যাকরণ''' () হচ্ছে একটি বিধিগত ব্যাকরণ (formal grammar) যেখানে প্রতিটি উৎপাদনী সূত্র (production rule) নিম্নোক্ত রূপের হয়- :V ''w'' যেখানে একটি অসমাপ্তিজ্ঞাপক প্রতীক (nonterminal symbol) এবং ''w'' হচ্ছে সমাপ্তিজ্ঞাপক (terminal symbol) ও/অথবা অসমাপ্তিজ্ঞাপক প্রতীক দিয়ে গঠিত একটি স্ট্রিং। "প্রসঙ্গমুক্ত" (context-free) পরিভাষাটি দিয়ে বোঝানো হচ্ছে যে অসমাপ্তিজ্ঞাপক V-কে সর্বদাই ''w'' দিয়ে প্রতিস্থাপিত করা যাবে, সেটি যে প্রসঙ্গেই ঘটুক না কেন। একটি বিধিগত ভাষা (formal language) যদি কোন প্রসঙ্গমুক্ত ব্যাকরণ থেকে উৎপাদন বা সৃষ্টি (generate) করা হয়, তবে তাকে প্রসঙ্গমুক্ত ভাষা (context-free language) বলা হয়। প্রসঙ্গমুক্ত ব্যাকরণ একটি শক্তিশালী ধারণা এবং এর সাহায্যে বেশির ভাগ প্রোগ্রামিং ভাষার সিনট্যাক্স বর্ণনা করা যায় এবং তা-ই বাস্তবে ঘটেছে। কিন্তু প্রসঙ্গমুক্ত ব্যাকরণগুলি সরলও বটে; এগুলির সাহায্যে দক্ষ পার্সিং অ্যালগোরিদম নির্মাণ করা সম্ভব, যেগুলি কোন প্রদত্ত স্ট্রিং কীভাবে ব্যাকরণটি থেকে সৃষ্টি হতে পারে, তা নির্ণয়ে সক্ষম। আর্লি পার্সার (Earley parser) এই ধরনের অ্যালগোরিদমের একটি উদাহরণ। এলআর পার্সার (LR parser) এবং এলএল পার্সারগুলি (LL parser) প্রসঙ্গমুক্ত ব্যাকরণসমূহের একটি সীমিত উপসেটের ওপর কাজ করে। প্রসঙ্গমুক্ত ব্যাকরণ প্রকাশ করার জন্য সবচেয়ে প্রচলিত লিখন পদ্ধতি (notation) হচ্ছে বিএনএফ (BNF) বা বাকাস-নাউর রূপ। বিধিগত ভাষামাত্রেই প্রসঙ্গমুক্ত নয়। এরকম একটি ভাষা হল যা এমন কতগুলি স্ট্রিং-এর সেট, যার প্রতিটি স্ট্রিং কিছু সংখ্যক দিয়ে শুরু হয়, এবং একে অনুসরণ করে সমসংখ্যক এবং c। == বিধিগত সংজ্ঞা == অন্য যেকোন বিধিগত ব্যাকরণের (formal grammar) মতই কোন প্রসঙ্গমুক্ত ব্যাকরণ G-কে একটি ৪-টুপল আকারে প্রকাশ করা যায়: যেখানে সমাপ্তিজ্ঞাপক প্রতীকের সসীম সেট অ-সমাপ্তিজ্ঞাপক প্রতীকের সসীম সেট উৎপাদন নিয়মসমূহের একটি সসীম সেট হচ্ছে একটি উপাদান, একটি বিশেষভাবে চিহ্নিত আরম্ভসূচক অ-সমাপ্তিজ্ঞাপক প্রতীক (starting non-terminal) -এর উপাদানগুলি নিচের রূপবিশিষ্ট :: কোন ভাষা L-কে একটি প্রসঙ্গমুক্ত ভাষা বা CFL) বলা হয় যদি এর ব্যাকরণটি প্রসঙ্গমুক্ত হয়। আরও সঠিকভাবে, এমন একটি ভাষা যার শব্দ, বাক্য এবং পদগুচ্ছগুলি একটি প্রসঙ্গমুক্ত ব্যাকরণের প্রতীক শব্দ দিয়ে গঠিত। L-কে তাই সাধারণত L=L(G) আকারে প্রকাশ করা হয়। নিচে কিছু প্রসঙ্গমুক্ত ব্যাকরণের উদাহরণ দেয়া হল: == উদাহরণসমূহ == === উদাহরণ === নিচে একটি সরল প্রসঙ্গমুক্ত ব্যাকরণ দেয়া হল: :S aSb যেখানে দিয়ে একই অসমাপ্তিজ্ঞাপক প্রতীকের জন্য একাধিক অপশনগুলিকে পৃথক করে দেখানো হয়েছে এবং দিয়ে খালি স্ট্রিং বোঝানো হয়েছে। এই ব্যাকরণটি নিচের ভাষাটিকে সৃষ্টি করে: যা একটি নিয়মিত ভাষা নয়। === উদাহরণ === নিচের প্রসঙ্গমুক্ত ব্যাকরণটি x, এবং নামক তিনটি চলকের জন্য সঠিক ইনফিক্স বীজগাণীতিক এক্সপ্রেশন সৃষ্টি করতে পারে: :S S/S (S) উদাহরণস্বরূপ এই ব্যাকরণটি "( )" স্ট্রিংটি সৃষ্টি করতে পারে। এই ব্যাকরণটি দ্ব্যর্থবোধক, অর্থাৎ এতে একই স্ট্রিং-কে একাধিক পার্স-বৃক্ষের সাহায্যে সৃষ্টি করা সম্ভব। === উদাহরণ === {a,b} সেটটির উপর ভিত্তি করে গঠিত সমস্ত স্ট্রিং, যেগুলির প্রতিটিতে a-এর সংখ্যা b-এর সংখ্যার সমান নয়, যে ভাষা গঠন করে, সেই ভাষাটিকে নিচের প্রসঙ্গমুক্ত ব্যাকরণ দিয়ে নির্দেশ করা যায় :S :U TaU TaT :V TbV TbT :T aTbT bTaT এখানে এরকম সমস্ত স্ট্রিং সৃষ্টি করে যেগুলিতে b-এর সংখ্যা সমান। এরকম সমস্ত স্ট্রিং সৃষ্টি করে যেগুলিতে a-এর সংখ্যা b-এর চেয়ে বেশি এবং এমন সমস্ত স্ট্রিং সৃষ্টি করে যেগুলিতে a-এর সংখ্যা b-এর সংখ্যার চেয়ে কম। === উদাহরণ === প্রসঙ্গমুক্ত ভাষার আরেকটি উদাহরণ হল এটি একটি নিয়মিত ভাষা নয়, কিন্তু এটি প্রসঙ্গমুক্ত এবং নিচের প্রসঙ্গমুক্ত ব্যাকরণটি দিয়ে সৃষ্টি করা সম্ভব: :S bSbb :A aA === অন্যান্য উদাহরণ === প্রসঙ্গমুক্ত ব্যাকরণ কেবল গাণিতিক বিধিগত ভাষাসমূহের মধ্যেই সীমাবদ্ধ নয়। ভেনপা নামের এক শ্রেণীর তামিল কবিতা প্রসঙ্গমুক্ত বলে ধারণা করা হয়। == তথ্যসূত্র == Section 2.1: Context-Free Grammars, pp. 91–101. Section 4.1.2: Decidable problems concerning context-free languages, pp. 156–159. Section 5.1.1: Reductions via computation histories: pp. 176–183. ভাষা